# Build FreeTube and publish release
name: FreeTube Fedora COPR build
on: workflow_dispatch
env:
  COPR_PROJECT: freetube
  COPR_USERNAME: deltacopy
  COPR_URL: https://copr.fedorainfracloud.org
  BUILD_REPO: https://github.com/FreeTubeApp/FreeTube
  SPEC_FILE: $GITHUB_WORKSPACE/freetube.spec
jobs:
  copr-ci:
    runs-on: ubuntu-latest
    container: fedora:latest
    steps:
      - name: Checkout local
        uses: actions/checkout@v4.2.0
        with:
          repository: ${{ github.repository }}
          sparse-checkout-cone-mode: false

      - name: Install dependencies
        run: sudo dnf install -y -q copr-cli python3 git gawk

      - name: Get latest tag
        run: |
          latest_tag=$(git -c 'versionsort.suffix=-' ls-remote --exit-code --refs --sort='version:refname' --tags $BUILD_REPO '*.*' \
            | tail --lines=1 | cut --delimiter='/' --fields=3)

          echo "INFO: Latest tag = $latest_tag"

          # use the tag name but strip the 'v' and '-beta' for the asset name to publish
          tagname=$(echo $latest_tag | sed 's/^v//g;s/-beta//g')

          echo "LATEST_TAG=$tagname" >> "$GITHUB_ENV"

          sed -i "s/.*%define release_tag.*/%define release_tag ${tagname}/" ${{ env.SPEC_FILE }}

      - name: Update copr-cli configuration
        run: |
          mkdir $HOME/.config
          cat <<EOF > $HOME/.config/copr
          [copr-cli]
          login = ${{ secrets.COPR_BUILD_L }}
          username = ${{ env.COPR_USERNAME }}
          token = ${{ secrets.COPR_BUILD_T }}
          copr_url = ${{ env.COPR_URL }}
          EOF
      - name: Get latest COPR build information
        run: |
          LATEST_COPR=$(copr-cli get-package ${{ env.COPR_USERNAME }}/${{ env.COPR_PROJECT }} --name ${{ env.COPR_PROJECT }} | python -c 'import json,sys;obj=json.load(sys.stdin);print(obj["latest_build"]["source_package"]["version"]);')

          echo "Latest COPR version = ${LATEST_COPR%-*}"

          if [[ ${LATEST_COPR%-*} < ${{ env.LATEST_TAG }} ]] || [[ -z ${LATEST_COPR%-*} ]]; then
            echo "START_BUILD=true" >> "$GITHUB_ENV"
            echo "Starting COPR build"
          else
            echo "START_BUILD=false" >> "$GITHUB_ENV"
            echo "Skipping COPR build"
          fi

      - name: Trigger COPR build
        if: env.START_BUILD == 'true'
        run: copr-cli build ${{ env.COPR_PROJECT }} output/COPR/specs/${{ env.SPEC_FILE }}
